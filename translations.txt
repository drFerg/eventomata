E1 => CA

subscribe E1;
event e1;
behavior{
	switch(gettopic()){
		case('E1'): e1 = E1;
	}
	if (e1) {
		conditionAction(e1);
		e1 = NULL;
	}
}

=====================================
E1 OR E2 => CA

subscribe E1, E2;
event e1, e2;
behavior{
	switch(gettopic()){
		case('E1'): e1 = E1;
		case('E2'): e2 = E2;
	}
	if (e1 || e2) {
		conditionAction(e1, e2);
		e1 = e2 = NULL;
	}
}

=====================================
E1 AND E2 => CA

subscribe E1, E2;
event e1, e2;
behavior{
	switch(gettopic()){
		case('E1'): e1 = E1;
		case('E2'): e2 = E2;
	}
	if (e1 & e2) {
		conditionAction(e1, e2);
		e1 = e2 = NULL;
	}
}

=====================================
E1+ AND E2+ => CA

subscribe E1, E2;
event e1[], e2[];
behavior{
	switch(gettopic()){
		case('E1'): e1.append(E1);
		case('E2'): e2.append(E2);
	}
	if (e1.notEmpty() & e2.notEmpty()) {
		conditionAction(e1, e2);
		e1.clear();
		e2.clear();
	}
}

=====================================
E1[0] AND E2[0] => CA

subscribe E1, E2;
event e1, e2;
behavior{
	switch(gettopic()){
		case('E1'): if (e1 == NULL) e1 = E1;
		case('E2'): if (e2 == NULL) e2 = E2;
	}
	if (e1.notEmpty() & e2.notEmpty()) {
		conditionAction(e1, e2);
		e1.clear();
		e2.clear();
	}
}

=====================================
E1[0] AND E2[0] => CA #unsubscribe#

subscribe E1, E2;
event e1, e2;
behavior{
	switch(gettopic()){
		case('E1'): e1 = E1; unsubscribe E1;
		case('E2'): e2 = E2; unsubscribe E2;
	}
	if (e1.notEmpty() & e2.notEmpty()) {
		conditionAction(e1, e2);
		e1.clear();
		e2.clear();
		subscribe E1, E2;
	}
}

=====================================
E1 -> E2 => CA

subscribe E1, E2;
event e1, e2;
behavior{
	switch(gettopic()){
		case('E1'): e1 = E1;
		case('E2'): if (e1) {e2 = E2;};
	}
	if (e2){
		conditionAction(e1, e2);
		e1 = e2 = NULL;
	}
}

=====================================
(E1 -> E2) ! E3 => CA

subscribe E1, E2, E3;
event e1, e2, e3;
behavior{
	switch(gettopic()){
		case('E1'): e1 = E1;
		case('E2'): if (e1) {e2 = E2;};
		case('E3'): e1 = NULL;
	}
	if (e2){
		conditionAction(e1, e2);
		e1 = e2 = NULL;
	}
}
=====================================
(E1 OR E2) AND E3

subscribe E1, E2, E3;
event e1, e2, e3;
behavior{
	switch(gettopic()){
		case('E1'): e1 = E1;
		case('E2'): e2 = E2;
		case('E3'): e3 = E3;
	}
	if ((e1 || e2) & e3) {
		conditionAction(e1, e2, e3);
		e1 = e2 = e3 = NULL;
	} # ISSUE WITH PAIRING #
}
=====================================
(E1 -> E2) AND E3

subscribe E1, E2, E3;
event e1, e2, e3;
behavior{
	switch(gettopic()){
		case('E1'): e1 = E1;
		case('E2'): if (e1) {e2 = E2;};
		case('E3'): e3 = E3;
	}
	if (e2 & e3) {
		conditionAction(e1, e2, e3);
		e1 = e2 = e3 = NULL;
	}
}
=====================================
(E1 AND E2) -> E3

subscribe E1, E2, E3;
event e1, e2, e3;
behavior{
	switch(gettopic()){
		case('E1'): e1 = E1;
		case('E2'): e2 = E2;
		case('E3'): if (e1 & e2) {e3 = E3;};
	}
	if (e3) {
		conditionAction(e1, e2, e3);
		e1 = e2 = e3 = NULL;
	}
}

=====================================
(E1 AND E2) -> (E3 OR E4)

subscribe E1, E2, E3, E4;
event e1, e2, e3, e4;
behavior{
	switch(gettopic()){
		case('E1'): e1 = E1;
		case('E2'): e2 = E2;
		case('E3'): if (e1 & e2) {e3 = E3;};
		case('E4'): if (e1 & e2) {e4 = E4;};
	}
	if (e3 || e4) {
		conditionAction(e1, e2, e3, e4);
		e1 = e2 = e3 = e4 = NULL;
	}
}
=====================================
